[{"/Users/a1/PycharmProjects/reminders/reminders/schedule-ui/src/index.js":"1","/Users/a1/PycharmProjects/reminders/reminders/schedule-ui/src/reportWebVitals.js":"2","/Users/a1/PycharmProjects/reminders/reminders/schedule-ui/src/App.js":"3"},{"size":500,"mtime":1607584434207,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1607584434208,"results":"6","hashOfConfig":"5"},{"size":8981,"mtime":1607716911543,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"xup0se",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"/Users/a1/PycharmProjects/reminders/reminders/schedule-ui/src/index.js",[],["17","18"],"/Users/a1/PycharmProjects/reminders/reminders/schedule-ui/src/reportWebVitals.js",[],["19","20"],"/Users/a1/PycharmProjects/reminders/reminders/schedule-ui/src/App.js",["21","22","23","24","25"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Card } from '@material-ui/core';\n\nimport 'date-fns';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popover from '@material-ui/core/Popover';\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\nimport TodayIcon from '@material-ui/icons/Today';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Divider from '@material-ui/core/Divider';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport { createMuiTheme, MuiThemeProvider} from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport green from '@material-ui/core/colors/green';\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingTop: 70,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 0,\n    bottom: 'auto',\n    height: '70px',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: 'absolute',\n    zIndex: 1,\n    top: 5,\n    right: 0,\n    margin: '0 10px',\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: green,\n  },\n});\n\nfunction App() {\n\n    const [events, setEvents] = useState([])\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n    setExpanded(!expanded);\n    };\n\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: \"http://0.0.0.0:8000/api/event/\"\n        }).then(response => {\n            setEvents(response.data)\n        })\n    }, [])\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const [openDialogAddEvent, setOpenDialogAddEvent] = React.useState(false);\n  const [openDialogEditEvent, setOpenDialogEditEvent] = React.useState(false);\n\n// ActionsPopover\n  const handleClickOpenPopover = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n// Add Dialog\n  const handleClickOpenAdd = (event) => {\n    setOpenDialogAddEvent(true)\n  };\n  const handleClickCloseAdd = () => {\n    setOpenDialogAddEvent(false);\n  };\n  const handleClickAdd = () => {\n    setOpenDialogAddEvent(false);\n  };\n\n// Remove\n  const handleClickRemove = (event) => {\n\n  };\n\n// Edit Dialog\n  const handleClickOpenEdit = (event) => {\n    setOpenDialogEditEvent(true);\n  };\n\n  const handleClickCloseEdit = (event) => {\n    setOpenDialogEditEvent(false);\n  };\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const openPopover = Boolean(anchorEl);\n  const id = openPopover ? 'simple-popover' : undefined;\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n  <MuiThemeProvider theme={theme}>\n    <React.Fragment>\n         <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <Typography className={classes.text} variant=\"h5\" gutterBottom>Reminders</Typography>\n          <Fab color=\"secondary\" aria-label=\"add\" className={classes.fabButton}>\n            <AddIcon onClick={handleClickOpenAdd}/>\n          </Fab>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n      <Paper square className={classes.paper}>\n        <List className={classes.list}>\n          {events.map(({ id, primary, event_date, event_time }) => (\n            <React.Fragment key={id}>\n              <ListItem>\n                <ListItemText\n                  primary={primary}\n                  secondary={\n                    <React.Fragment>\n                      <TodayIcon fontSize=\"small\"/>\n                          {\" \" + event_date + \" \"}\n                      <AccessAlarmIcon fontSize=\"small\"/>\n                        {\" \" + event_time + \" \"}\n                    </React.Fragment>\n                  }\n                />\n                <ExpandMoreIcon onClick={handleClickOpenPopover}/>\n                <Popover\n                  id={id}\n                  open={openPopover}\n                  anchorEl={anchorEl}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                  }}\n                >\n                  <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                    <ListItem button onClick={handleClickOpenEdit}>\n                      <ListItemText primary=\"Edit\" />\n                    </ListItem>\n                    <ListItem button onClick={handleClickRemove}>\n                      <ListItemText primary=\"Remove\" />\n                    </ListItem>\n                  </List>\n                </Popover>\n              </ListItem>\n              <Divider component=\"li\" />\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n\n      <Dialog fullWidth=\"true\" open={openDialogAddEvent} onClose={handleClickCloseAdd}>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"reminder_text\"\n            label=\"Reminder text\"\n            type=\"text\"\n            fullWidth\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container justify=\"space-around\">\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Date picker dialog\"\n              format=\"MM/dd/yyyy\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <KeyboardTimePicker\n              margin=\"normal\"\n              id=\"time-picker\"\n              label=\"Time picker\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n            />\n          </Grid>\n          </MuiPickersUtilsProvider>\n          <Typography align=\"right\" className={classes.root}>\n            <Button onClick={handleClickAdd} color=\"secondary\">\n              ADD\n            </Button>\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n\n        </DialogActions>\n      </Dialog>\n\n\n      <Dialog fullWidth=\"true\" open={openDialogEditEvent} onClose={handleClickCloseEdit}>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"reminder_text\"\n            label=\"Reminder text\"\n            type=\"text\"\n            fullWidth\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <Grid container justify=\"space-around\">\n            <KeyboardDatePicker\n              margin=\"normal\"\n              id=\"date-picker-dialog\"\n              label=\"Date picker dialog\"\n              format=\"MM/dd/yyyy\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n            <KeyboardTimePicker\n              margin=\"normal\"\n              id=\"time-picker\"\n              label=\"Time picker\"\n              value={selectedDate}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n            />\n          </Grid>\n          </MuiPickersUtilsProvider>\n          <Typography align=\"right\" className={classes.root}>\n            <Button onClick={handleClickAdd} color=\"secondary\">\n              ADD\n            </Button>\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n\n        </DialogActions>\n      </Dialog>\n\n    </React.Fragment>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":4,"column":10,"nodeType":"34","messageId":"35","endLine":4,"endColumn":14},{"ruleId":"32","severity":1,"message":"36","line":33,"column":8,"nodeType":"34","messageId":"35","endLine":33,"endColumn":19},{"ruleId":"32","severity":1,"message":"37","line":36,"column":8,"nodeType":"34","messageId":"35","endLine":36,"endColumn":12},{"ruleId":"32","severity":1,"message":"38","line":84,"column":11,"nodeType":"34","messageId":"35","endLine":84,"endColumn":28},{"ruleId":"32","severity":1,"message":"39","line":140,"column":9,"nodeType":"34","messageId":"35","endLine":140,"endColumn":11},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],["40"],["41"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'DialogTitle' is defined but never used.","'Link' is defined but never used.","'handleExpandClick' is assigned a value but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]